version: 2.1

jobs:
  build:
    docker:
      - image: thebiggive/donate-frontend-ci:latest

    working_directory: ~/donate

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}

      - run: npm install --quiet

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      - run: npm run ci

  deploy-s3-demo:
    docker:
      - image: circleci/node:lts

    steps:
      - checkout

      - run: npm install --quiet

      - run: npm run build:s3-demo

      - aws-s3/sync:
          from: dist/browser
          to: 's3://tbg-donate-frontend-demo'
          arguments: |
            --acl public-read \
            --cache-control "max-age=300"
          overwrite: true

orbs:
  aws-ecr: circleci/aws-ecr@6.3.0
  aws-ecs: circleci/aws-ecs@0.0.11
  aws-s3: circleci/aws-s3@1.0.11
  jira: circleci/jira@1.0.5
  slack: circleci/slack@3.2.0

workflows:
  build:
    jobs:
      - build:
          post-steps:
            - jira/notify:
                job_type: build
                environment_type: development
  deploy-staging:
    jobs:
      - aws-ecr/build-and-push-image:
          filters:
            branches:
              only:
                - master # TODO this will become develop when we start deploying to prod
          extra-build-args: "BUILD_ENV=staging"
          repo: "${AWS_ECS_RESOURCE_NAME}"
          region: AWS_REGION
          tag: "staging-${CIRCLE_SHA1}"
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          aws-region: ${AWS_REGION}
          family: "${AWS_ECS_RESOURCE_NAME}"
          cluster-name: "${AWS_ECS_RESOURCE_NAME}"
          container-image-name-updates: "container=${AWS_ECS_RESOURCE_NAME},tag=staging-${CIRCLE_SHA1}"
  deploy-s3-demo:
    jobs:
      - deploy-s3-demo:
          filters:
            branches:
              only:
                - master
          post-steps:
            - jira/notify:
                job_type: deployment
                environment_type: staging
            - slack/notify:
                color: '#009900'
                message: Donate frontend staging demo deployed to S3
                title: Donate frontend deployed!
                title_link: https://d21lpwf5nm8mg.cloudfront.net
